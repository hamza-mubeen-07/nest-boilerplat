version: "3.8"

services:
  app:
    container_name: 'uat_boilerplate'
    build:
      context: ./
      dockerfile: Dockerfile.slim
    user: "node"
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "$USER_PORT:$USER_PORT"
      - "$AUTH_PORT:$AUTH_PORT"
      - "$POST_PORT:$POST_PORT"
      - "$CATEGORY_PORT:$CATEGORY_PORT"
    networks:
      - mysql-network
      - nats-network
      - nginx-network
    entrypoint: [ "/bin/sh","-c" ]
    command:
      - |
        npm ci
        npx prisma generate
        npx prisma migrate deploy
        npm run start:prod

  # Remove in case of RDS or if db already exists
  database-mysql:
    image: mysql:5.7
    restart: always
    networks:
      - mysql-network
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    ports:
      - "$MYSQL_PORT:3306"
    volumes:
      - datastore:/var/lib/mysql

  # Remove if portal already exists
  phpmyadmin:
    depends_on:
      - database-mysql
    image: phpmyadmin
    restart: always
    ports:
      - '$PHP_ADMIN_PORT:80'
    environment:
      PMA_HOST: database-mysql
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    networks:
      - mysql-network

  # Remove if nat service is already installed on server
  nats:
    image: nats
    ports:
      - "$NATS_CLIENT_PORT:4222"
      - "$NATS_MANAGE_PORT:8222"
    networks:
      - nats-network

  nginx:
    image: nginx
    ports:
      - "$NGINX_PORT:80"
    depends_on:
      - app
    volumes:
      - ./nginx/uat:/etc/nginx/conf.d:ro
    restart: always
    networks:
      - nginx-network

volumes:
  datastore:
networks:
  mysql-network:
  nats-network:
  nginx-network: